#+title: Optimization design library

This repo shall support user in:
- building optimization problems using the casadi library
- Testing initial guess and constraints for the designed library
- Nicer/more intuitive interface to runtime optimizer, especially for larger optmization problems
- Exporting the optimizaiton problem to Casadi-independent CPP code.
  
Why you might want casadi indepent code?
- Casadi implement of SQPMethod has random significant delays during runtime. With building Casadi indepent code, this projects wants solve this problem or at least make it checkable where this delays are coming from.
- Reduce package size
- Improve readability and thus verifiability of generated code.

* Overview SQPMethod runtime logic

*WARNING:* The SQPMethod is a reimplementation of Casadis SQPMethod. Therefore, it is in best case as good as Casadis SQPMethod. Casadis SQPMethod is not ready for production!

  [[file:doc/optimization-design-library-design.svg]]

* Variables
- =problem_parameters= (variable name: =prob_params=): Parameters of the optimization definition, passed to the optimizer (should but are not generated from scenario)
  Generated in interface-class or higher
- =scenario_parameters= (variable_name: =scenario=): All variables which are required to build initial guess or the limit vectors
  Generated in interface-class or higher. Replaced before the optimization call with number, so they are not passed as parameter to the optimizer.

- =quad_prob_parameter=: Collection of initial guess and limits passed to the optimizer classes
  Generated in Interface-class
- =optimizer_options=: Not yet used(?)

  [[file:doc/variable-process-overview.svg]]

* Developing strategy (for now)
- Develop library in =project/optimizaiton_design_library=.
- Test basic unittests here?
- Build pats code:
  Run the =test_ocp*= in =code/pats/base/ocp_design/<problem>/=.
- Test pats code in =code/pats/base/unittest=.
